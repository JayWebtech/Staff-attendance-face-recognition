{"ast":null,"code":"import { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport { loadingState } from '@/composibles/useNotification';\nexport default {\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_router_view = _resolveComponent(\"router-view\");\n\n      return !_unref(loadingState).cacheLoading.value ? (_openBlock(), _createBlock(_component_router_view, {\n        key: 0\n      })) : _createCommentVNode(\"\", true);\n    };\n  }\n\n};","map":{"version":3,"mappings":";AAOA,SAASA,YAAT,QAA6B,+BAA7B","names":["loadingState"],"sources":["/Users/kromate/Desktop/fun stuff (vue)/faceReg/src/App.vue"],"sourcesContent":["<template>\n\t<router-view v-if=\"!loadingState.cacheLoading.value\"></router-view>\n</template>\n\n\n\n<script setup  >\nimport { loadingState } from '@/composibles/useNotification'\n\n</script>"]},"metadata":{},"sourceType":"module"}