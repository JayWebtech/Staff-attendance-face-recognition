{"ast":null,"code":"// import { Webcam } from '../helper/webcam'\nconst Webcam = require('../helper/webcam');\n\nimport { globalState } from './useState';\n\nconst faceapi = require('../helper/faceApi.min.js');\n\nconst getMode = objMood => {\n  let highestMood = '';\n  let highest = 0;\n  Object.keys(objMood).map(mood => {\n    if (objMood[mood] > highest) {\n      highest = objMood[mood];\n      highestMood = mood;\n    }\n  });\n  return highestMood;\n};\n\nexport const saveFace = faceData => {\n  Webcam.snap(function (data_uri) {\n    if (faceData.detection.score.toFixed(2) > 0.7) {\n      globalState.capturedFaces.value.push({\n        detection: faceData.detection.score.toFixed(2),\n        img: data_uri,\n        mood: getMode(faceData.expressions)\n      });\n    }\n  });\n  console.log(globalState.capturedFaces.value);\n};\nexport function startVideo(video) {\n  navigator.getUserMedia({\n    video: {}\n  }, stream => video.srcObject = stream, err => console.error(err));\n}\nexport const ScanFace = () => {\n  const video = document.querySelector('#video');\n  let recog;\n  video.addEventListener('play', () => {\n    const canvas = faceapi.createCanvasFromMedia(video);\n    document.body.append(canvas);\n    const displaySize = {\n      width: video.width,\n      height: video.height\n    };\n    faceapi.matchDimensions(canvas, displaySize);\n    recog = setInterval(async () => {\n      const count = globalState.capturedFaces.value.length;\n\n      try {\n        const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        const resizedDetections = faceapi.resizeResults(detections, displaySize);\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        faceapi.draw.drawDetections(canvas, resizedDetections);\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n\n        if (resizedDetections) {\n          if (count < 3) saveFace(resizedDetections);\n          document.querySelector('#alert').style.color = 'green';\n          document.querySelector('#alert').innerHTML = `Face found, Captured ${count} out of 3`;\n\n          if (count >= 3) {\n            await clearInterval(recog);\n            canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n            globalState.registerState.value++;\n          }\n        }\n      } catch {\n        if (count < 3) {\n          document.querySelector('#alert').style.color = 'red';\n          document.querySelector('#alert').innerHTML = `Can't find a Face, Please Adjust <br>  Captured ${count} out of 3`;\n        }\n      }\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/kromate/Desktop/fun stuff (vue)/faceReg/src/composibles/useVideo.js"],"names":["Webcam","require","globalState","faceapi","getMode","objMood","highestMood","highest","Object","keys","map","mood","saveFace","faceData","snap","data_uri","detection","score","toFixed","capturedFaces","value","push","img","expressions","console","log","startVideo","video","navigator","getUserMedia","stream","srcObject","err","error","ScanFace","document","querySelector","recog","addEventListener","canvas","createCanvasFromMedia","body","append","displaySize","width","height","matchDimensions","setInterval","count","length","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","resizedDetections","resizeResults","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","style","color","innerHTML","clearInterval","registerState"],"mappings":"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","sourcesContent":["// import { Webcam } from '../helper/webcam'\nconst Webcam = require('../helper/webcam')\nimport { globalState } from './useState';\nconst faceapi = require('../helper/faceApi.min.js')\n\n\nconst getMode = (objMood) => {\n\tlet highestMood = ''\n\tlet highest = 0\n\tObject.keys(objMood).map((mood) => {\n\t\tif (objMood[mood] > highest) {\n\t\t\thighest = objMood[mood]\n\t\t\thighestMood = mood\n\t\t} \n\t})\n\n\treturn highestMood\n}\nexport const saveFace = (faceData)=> {\n\tWebcam.snap(function (data_uri) {\n\t\tif (faceData.detection.score.toFixed(2) > 0.7) {\n\t\t\tglobalState.capturedFaces.value.push(\n\t\t\t\t{\n\t\t\t\t\tdetection: faceData.detection.score.toFixed(2),\n\t\t\t\t\timg: data_uri,\n\t\t\t\t\tmood: getMode(faceData.expressions)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t});\n\n\tconsole.log(globalState.capturedFaces.value)\n}\n\n\nexport function startVideo(video) {\n  \n\tnavigator.getUserMedia(\n\t\t{ video: {} },\n\t\t(stream) => video.srcObject = stream,\n\t\t(err) => console.error(err)\n\t)\n}\n\nexport const ScanFace = () => {\n\tconst video = document.querySelector('#video')\n\tlet recog\n\tvideo.addEventListener('play', () => {\n\t\tconst canvas = faceapi.createCanvasFromMedia(video)\n\t\t\n\t\tdocument.body.append(canvas)\n\t\tconst displaySize = { width: video.width, height: video.height }\n\t\tfaceapi.matchDimensions(canvas, displaySize)\n\t\trecog = setInterval(async () => {\n\t\t\tconst count = globalState.capturedFaces.value.length\n\t\t\ttry {\n\t\t\t\tconst detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n\t\t\t\tconst resizedDetections = faceapi.resizeResults(detections, displaySize)\n\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\tfaceapi.draw.drawDetections(canvas, resizedDetections)\n\t\t\t\tfaceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n\t\t\t\tif (resizedDetections) {\n\t\t\t\t\tif(count < 3)saveFace(resizedDetections)\n\t\t\t\t\tdocument.querySelector('#alert').style.color = 'green';\n\t\t\t\t\tdocument.querySelector('#alert').innerHTML = `Face found, Captured ${count} out of 3`\n\t\t\t\t\tif (count >= 3) {\n\t\t\t\t\t\tawait clearInterval(recog)\n\t\t\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\t\tglobalState.registerState.value++\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t} catch {\n\t\t\t\tif (count < 3) {\n\t\t\t\t\tdocument.querySelector('#alert').style.color= 'red';\n\t\t\t\t\tdocument.querySelector('#alert').innerHTML = `Can't find a Face, Please Adjust <br>  Captured ${count} out of 3`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\n\t\t}, 1000)\n\t});   \n}"]},"metadata":{},"sourceType":"module"}