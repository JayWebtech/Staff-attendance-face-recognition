{"ast":null,"code":"const Webcam = require('../helper/webcam');\n\nimport { ref } from 'vue';\nimport { savedUsers } from './useState';\n\nconst faceapi = require('../helper/faceApi.min.js');\n\nimport { useAlert } from './useNotification';\nimport { useRouter } from 'vue-router';\nlet snappedFace = ref().value;\n\nfunction loadLabeledImages() {\n  if (savedUsers.length == 0) {\n    useAlert().openAlert(`Attendance has been taken for ${result._label}`);\n  }\n\n  return Promise.all(savedUsers.map(async label => {\n    const descriptions = [];\n\n    for (let i = 1; i <= 2; i++) {\n      const queryImage = new Image();\n      queryImage.src = label.img;\n      const detections = await faceapi.detectSingleFace(queryImage).withFaceLandmarks().withFaceDescriptor();\n      descriptions.push(detections.descriptor);\n    }\n\n    return new faceapi.LabeledFaceDescriptors(label.name, descriptions);\n  }));\n}\n\nconst scanImg = async router => {\n  const image = new Image();\n  image.src = snappedFace; // const image = snappedFace\n\n  const container = document.createElement('div');\n  container.style.position = 'relative';\n  document.body.append(container);\n  const labeledFaceDescriptors = await loadLabeledImages();\n  const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.4);\n  const canvas = await faceapi.createCanvasFromMedia(image);\n  document.body.append(canvas);\n  const displaySize = {\n    width: 350,\n    height: 265\n  };\n  faceapi.matchDimensions(canvas, displaySize);\n  const detection = await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n\n  if (detection.length < 1) {\n    location.reload();\n  } else {\n    const resizedDetections = faceapi.resizeResults(detection, displaySize);\n    const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n    results.forEach((result, i) => {\n      const box = resizedDetections[i].detection.box;\n      const drawBox = new faceapi.draw.DrawBox(box, {\n        label: result.toString()\n      });\n      console.log(result._label);\n      drawBox.draw(canvas);\n      savedUsers.map(async (label, index) => {\n        if (label.name === result._label) {\n          // savedUsers[index].date.push(`${new Date().toLocaleTimeString()} of ${new Date().toLocaleDateString()}`)\n          canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n          useAlert().openAlert(`Attendance has been taken for ${result._label}`);\n          router.push('/attendanceSheet');\n        }\n      });\n    });\n  }\n};\n\nexport const SnapFace = () => {\n  const router = useRouter();\n  const video = document.querySelector('#video');\n  let recog;\n  video.addEventListener('play', () => {\n    const canvas = faceapi.createCanvasFromMedia(video);\n    document.body.append(canvas);\n    const displaySize = {\n      width: video.width,\n      height: video.height\n    };\n    faceapi.matchDimensions(canvas, displaySize);\n    recog = setInterval(async () => {\n      try {\n        const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        const resizedDetections = faceapi.resizeResults(detections, displaySize);\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        faceapi.draw.drawDetections(canvas, resizedDetections);\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n\n        if (resizedDetections) {\n          if (resizedDetections.detection.score.toFixed(2) > 0.7) {\n            await clearInterval(recog);\n            canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n            document.querySelector('#alert').style.color = 'green';\n            document.querySelector('#alert').innerHTML = 'Face found';\n            Webcam.snap(function (data_uri) {\n              snappedFace = data_uri;\n            });\n            await scanImg(router);\n          } else {\n            document.querySelector('#alert').style.color = 'red';\n            document.querySelector('#alert').innerHTML = 'Can\\'t find a Face, Please Adjust';\n          }\n        }\n      } catch (err) {\n        console.log('something went wrong ====', err);\n      }\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/kromate/Desktop/faceReg/fas/src/composibles/useAttendance.js"],"names":["Webcam","require","ref","savedUsers","faceapi","useAlert","useRouter","snappedFace","value","loadLabeledImages","length","openAlert","result","_label","Promise","all","map","label","descriptions","i","queryImage","Image","src","img","detections","detectSingleFace","withFaceLandmarks","withFaceDescriptor","push","descriptor","LabeledFaceDescriptors","name","scanImg","router","image","container","document","createElement","style","position","body","append","labeledFaceDescriptors","faceMatcher","FaceMatcher","canvas","createCanvasFromMedia","displaySize","width","height","matchDimensions","detection","detectAllFaces","withFaceDescriptors","location","reload","resizedDetections","resizeResults","results","d","findBestMatch","forEach","box","drawBox","draw","DrawBox","toString","console","log","index","getContext","clearRect","SnapFace","video","querySelector","recog","addEventListener","setInterval","TinyFaceDetectorOptions","withFaceExpressions","drawDetections","drawFaceLandmarks","score","toFixed","clearInterval","color","innerHTML","snap","data_uri","err"],"mappings":"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","sourcesContent":["const Webcam = require('../helper/webcam')\nimport { ref } from 'vue';\nimport { savedUsers } from './useState';\nconst faceapi = require('../helper/faceApi.min.js')\nimport { useAlert } from './useNotification';\nimport { useRouter } from 'vue-router';\n\nlet snappedFace = ref().value\n\n\nfunction loadLabeledImages() {\n\tif (savedUsers.length == 0) {\n\t\tuseAlert().openAlert(`Attendance has been taken for ${result._label}`)\n\t}\n\treturn Promise.all(\n\t\tsavedUsers.map(async (label) => {\n\t\t\tconst descriptions = []\n\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\tconst queryImage = new Image()\n\t\t\t\tqueryImage.src = label.img\n\t\t\t\tconst detections = await faceapi.detectSingleFace(queryImage).withFaceLandmarks().withFaceDescriptor()\n\t\t\t\tdescriptions.push(detections.descriptor)\n\t\t\t}\n\t\t\treturn new faceapi.LabeledFaceDescriptors(label.name, descriptions)\n\t\t})\n\t)\n}\n\nconst scanImg = async (router) => {\n\n\tconst image = new Image()\n\timage.src = snappedFace\n\t\n\t// const image = snappedFace\n\tconst container = document.createElement('div')\n\tcontainer.style.position = 'relative'\n\tdocument.body.append(container)\n\tconst labeledFaceDescriptors = await loadLabeledImages()\n\t\n\tconst faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.4)\n\n\tconst canvas = await faceapi.createCanvasFromMedia(image)\n\tdocument.body.append(canvas)\n\tconst displaySize = { width: 350, height: 265 }\n\t\n\tfaceapi.matchDimensions(canvas, displaySize)\n\tconst detection = await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors()\n\tif (detection.length < 1) {\n\t\tlocation.reload()\n\t} else { \n\t\tconst resizedDetections = faceapi.resizeResults(detection, displaySize)\n\t\tconst results = resizedDetections.map((d) => faceMatcher.findBestMatch(d.descriptor))\n\t\tresults.forEach((result, i) => {\n\t\t\tconst box = resizedDetections[i].detection.box\n\t\t\tconst drawBox = new faceapi.draw.DrawBox(box, { label: result.toString() })\n\t\t\tconsole.log(result._label)\n\t\t\tdrawBox.draw(canvas)\n\t\t\tsavedUsers.map(async (label, index) => { \n\t\t\t\tif (label.name === result._label) {\n\t\t\t\t\t// savedUsers[index].date.push(`${new Date().toLocaleTimeString()} of ${new Date().toLocaleDateString()}`)\n\t\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\tuseAlert().openAlert(`Attendance has been taken for ${result._label}`)\n\t\t\t\t\trouter.push('/attendanceSheet')\n\t\t\t\t} \n\t\t\t})\n\t\t\n     \n\t\t})\n\t}\n}\n\nexport const SnapFace = () => {\n\tconst router = useRouter()\n\tconst video = document.querySelector('#video')\n\tlet recog\n\tvideo.addEventListener('play', () => {\n\t\tconst canvas = faceapi.createCanvasFromMedia(video)\n\t\tdocument.body.append(canvas)\n\t\tconst displaySize = { width: video.width, height: video.height }\n\t\tfaceapi.matchDimensions(canvas, displaySize)\n\t\trecog = setInterval(async () => {\n\t\t\ttry {\n\t\t\t\tconst detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n\t\t\t\tconst resizedDetections = faceapi.resizeResults(detections, displaySize)\n\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\tfaceapi.draw.drawDetections(canvas, resizedDetections)\n\t\t\t\tfaceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n\t\t\t\t\n\t\t\t\tif (resizedDetections) {\n\t\t\t\t\tif (resizedDetections.detection.score.toFixed(2) > 0.7) {\n\t\t\t\t\t\tawait clearInterval(recog)\n\t\t\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\t\tdocument.querySelector('#alert').style.color = 'green';\n\t\t\t\t\t\tdocument.querySelector('#alert').innerHTML = 'Face found'\n\t\t\t\t\t\tWebcam.snap(function (data_uri) {\n\t\t\t\t\t\t\tsnappedFace = data_uri\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait scanImg(router)\n                    \n\t\t\t\t\t} else {\n\t\t\t\t\t\tdocument.querySelector('#alert').style.color= 'red';\n\t\t\t\t\t\tdocument.querySelector('#alert').innerHTML = 'Can\\'t find a Face, Please Adjust'\n\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log('something went wrong ====', err )\n\t\t\t}\n\t\t}, 1000)\n\t});   \n}"]},"metadata":{},"sourceType":"module"}