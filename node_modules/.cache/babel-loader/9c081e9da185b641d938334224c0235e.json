{"ast":null,"code":"const faceapi = require('../helper/faceApi.min.js');\n\nimport { startVideo } from './useVideo';\nexport const loadModels = () => {\n  const video = document.querySelector('#video');\n  Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri('./models'), faceapi.nets.faceLandmark68Net.loadFromUri('./models'), faceapi.nets.faceRecognitionNet.loadFromUri('./models'), faceapi.nets.faceExpressionNet.loadFromUri('./models'), faceapi.nets.ssdMobilenetv1.loadFromUri('/models')]).then(startVideo(video)).catch(e => console.log(e));\n};","map":{"version":3,"sources":["/Users/kromate/Desktop/faceReg/src/composibles/useFaceapi.js"],"names":["faceapi","require","startVideo","loadModels","video","document","querySelector","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","ssdMobilenetv1","then","catch","e","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAvB;;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC/B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACXR,OAAO,CAACS,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0C,UAA1C,CADW,EAEXX,OAAO,CAACS,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2C,UAA3C,CAFW,EAGXX,OAAO,CAACS,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4C,UAA5C,CAHW,EAIXX,OAAO,CAACS,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2C,UAA3C,CAJW,EAKXX,OAAO,CAACS,IAAR,CAAaM,cAAb,CAA4BJ,WAA5B,CAAwC,SAAxC,CALW,CAAZ,EAMGK,IANH,CAMQd,UAAU,CAACE,KAAD,CANlB,EAM2Ba,KAN3B,CAOEC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAPR;AASA,CAXM","sourcesContent":["const faceapi = require('../helper/faceApi.min.js')\n\nimport { startVideo } from './useVideo'\n\nexport const loadModels = () => {\n\tconst video = document.querySelector('#video')\n\tPromise.all([\n\t\tfaceapi.nets.tinyFaceDetector.loadFromUri('./models'),\n\t\tfaceapi.nets.faceLandmark68Net.loadFromUri('./models'),\n\t\tfaceapi.nets.faceRecognitionNet.loadFromUri('./models'),\n\t\tfaceapi.nets.faceExpressionNet.loadFromUri('./models'),\n\t\tfaceapi.nets.ssdMobilenetv1.loadFromUri('/models')\n\t]).then(startVideo(video)).catch(\n\t\t(e) => console.log(e)\n\t)\n}"]},"metadata":{},"sourceType":"module"}