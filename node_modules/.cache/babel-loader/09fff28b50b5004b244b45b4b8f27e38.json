{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return $setup.loadingState.cacheLoading.value ? (_openBlock(), _createBlock(_component_router_view, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;SACoBA,oBAAaC,YAAb,CAA0BC,uBAA7CC,aAAkEC,sBAAlE,EAAkE;AAAAC;AAAA,GAAlE","names":["$setup","cacheLoading","value","_createBlock","_component_router_view","key"],"sourceRoot":"","sources":["/Users/kromate/Desktop/faceReg/src/App.vue"],"sourcesContent":["<template>\n\t<router-view v-if=\"loadingState.cacheLoading.value\"></router-view>\n</template>\n\n\n\n<script setup  >\nimport { loadingState } from '@/composibles/useNotification'\n\n</script>"]},"metadata":{},"sourceType":"module"}