{"ast":null,"code":"const Webcam = require('../helper/webcam');\n\nimport { ref } from 'vue';\nimport { savedUsers } from './useState';\n\nconst faceapi = require('../helper/faceApi.min.js');\n\nlet snappedFace = ref().value;\n\nfunction loadLabeledImages() {\n  return Promise.all(savedUsers.map(async label => {\n    console.log(label);\n    const descriptions = [];\n\n    for (let i = 1; i <= 2; i++) {\n      const queryImage = new Image();\n      console.log(queryImage); // const detections = await faceapi.detectSingleFace(label.img).withFaceLandmarks().withFaceDescriptor()\n      // descriptions.push(detections.descriptor)\n    }\n\n    console.log(descriptions);\n    return new faceapi.LabeledFaceDescriptors(label.name, descriptions);\n  }));\n}\n\nconst scanImg = async () => {\n  const image = snappedFace;\n  const container = document.createElement('div');\n  container.style.position = 'relative';\n  document.body.append(container);\n  const labeledFaceDescriptors = await loadLabeledImages();\n  const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.4);\n  const canvas = faceapi.createCanvasFromMedia(image);\n  document.body.append(canvas);\n  const displaySize = {\n    width: image.width,\n    height: image.height\n  };\n  faceapi.matchDimensions(canvas, displaySize);\n  const detection = await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n\n  if (detection.length < 1) {\n    location.reload();\n  } else {\n    const resizedDetections = faceapi.resizeResults(detection, displaySize);\n    const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n    results.forEach((result, i) => {\n      const box = resizedDetections[i].detection.box;\n      const drawBox = new faceapi.draw.DrawBox(box, {\n        label: result.toString()\n      });\n      console.log(result._label);\n      drawBox.draw(canvas);\n      db.collection('students').doc(`${result._label}`).update({\n        date: firebase.firestore.FieldValue.arrayUnion(`${new Date().toLocaleTimeString()} of ${new Date().toLocaleDateString()}`)\n      }).then(() => {\n        window.location.assign('./index.html');\n      });\n    });\n  }\n};\n\nexport const SnapFace = () => {\n  const video = document.querySelector('#video');\n  let recog;\n  video.addEventListener('play', () => {\n    const canvas = faceapi.createCanvasFromMedia(video);\n    document.body.append(canvas);\n    const displaySize = {\n      width: video.width,\n      height: video.height\n    };\n    faceapi.matchDimensions(canvas, displaySize);\n    recog = setInterval(async () => {\n      try {\n        const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        const resizedDetections = faceapi.resizeResults(detections, displaySize);\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        faceapi.draw.drawDetections(canvas, resizedDetections);\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n\n        if (resizedDetections.detection.score.toFixed(2) > 0.7) {\n          await clearInterval(recog);\n          canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n          document.querySelector('#alert').style.color = 'green';\n          document.querySelector('#alert').innerHTML = 'Face found';\n          Webcam.snap(function (data_uri) {\n            snappedFace = data_uri;\n          });\n          await scanImg();\n        } else {\n          document.querySelector('#alert').style.color = 'red';\n          document.querySelector('#alert').innerHTML = 'Can\\'t find a Face, Please Adjust';\n        }\n      } catch (err) {\n        console.log('something went wrong ====', err);\n      }\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/kromate/Desktop/faceReg/fas/src/composibles/useAttendance.js"],"names":["Webcam","require","ref","savedUsers","faceapi","snappedFace","value","loadLabeledImages","Promise","all","map","label","console","log","descriptions","i","queryImage","Image","LabeledFaceDescriptors","name","scanImg","image","container","document","createElement","style","position","body","append","labeledFaceDescriptors","faceMatcher","FaceMatcher","canvas","createCanvasFromMedia","displaySize","width","height","matchDimensions","detection","detectAllFaces","withFaceLandmarks","withFaceDescriptors","length","location","reload","resizedDetections","resizeResults","results","d","findBestMatch","descriptor","forEach","result","box","drawBox","draw","DrawBox","toString","_label","db","collection","doc","update","date","firebase","firestore","FieldValue","arrayUnion","Date","toLocaleTimeString","toLocaleDateString","then","window","assign","SnapFace","video","querySelector","recog","addEventListener","setInterval","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceExpressions","getContext","clearRect","drawDetections","drawFaceLandmarks","score","toFixed","clearInterval","color","innerHTML","snap","data_uri","err"],"mappings":"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","sourcesContent":["const Webcam = require('../helper/webcam')\nimport { ref } from 'vue';\nimport { savedUsers } from './useState';\nconst faceapi = require('../helper/faceApi.min.js')\n\nlet snappedFace = ref().value\n\n\nfunction loadLabeledImages() {\n\n\treturn Promise.all(\n\t\tsavedUsers.map(async (label) => {\n\t\t\tconsole.log(label);\n\t\t\tconst descriptions = []\n\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\tconst queryImage = new Image()\n\t\t\t\tconsole.log(queryImage);\n\t\t\t\t// const detections = await faceapi.detectSingleFace(label.img).withFaceLandmarks().withFaceDescriptor()\n\t\t\t\t// descriptions.push(detections.descriptor)\n\t\t\t}\n\t\t\tconsole.log(descriptions);\n\n\t\t\treturn new faceapi.LabeledFaceDescriptors(label.name, descriptions)\n\t\t})\n\t)\n}\n\nconst scanImg = async()=> {\n    \n\tconst image = snappedFace\n\tconst container = document.createElement('div')\n\tcontainer.style.position = 'relative'\n\tdocument.body.append(container)\n\tconst labeledFaceDescriptors = await loadLabeledImages()\n\tconst faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.4)\n\n\tconst canvas = faceapi.createCanvasFromMedia(image)\n\tdocument.body.append(canvas)\n\tconst displaySize = { width: image.width, height: image.height }\n\tfaceapi.matchDimensions(canvas, displaySize)\n\tconst detection = await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors()\n\tif (detection.length < 1) {\n\t\tlocation.reload()\n\t} else { \n\t\tconst resizedDetections = faceapi.resizeResults(detection, displaySize)\n\t\tconst results = resizedDetections.map((d) => faceMatcher.findBestMatch(d.descriptor))\n\t\tresults.forEach((result, i) => {\n\t\t\tconst box = resizedDetections[i].detection.box\n\t\t\tconst drawBox = new faceapi.draw.DrawBox(box, { label: result.toString() })\n\t\t\tconsole.log(result._label)\n\t\t\tdrawBox.draw(canvas)\n\t\t\tdb.collection('students').doc(`${result._label}`).update({\n\t\t\t\tdate: firebase.firestore.FieldValue.arrayUnion(`${new Date().toLocaleTimeString()} of ${new Date().toLocaleDateString()}`)\n\t\t\t}).then(() => { window.location.assign('./index.html')});\n     \n\t\t})\n\t}\n}\n\nexport const SnapFace = () => {\n\tconst video = document.querySelector('#video')\n\tlet recog\n\tvideo.addEventListener('play', () => {\n\t\tconst canvas = faceapi.createCanvasFromMedia(video)\n\t\tdocument.body.append(canvas)\n\t\tconst displaySize = { width: video.width, height: video.height }\n\t\tfaceapi.matchDimensions(canvas, displaySize)\n\t\trecog = setInterval(async () => {\n\t\t\ttry {\n\t\t\t\tconst detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n\t\t\t\tconst resizedDetections = faceapi.resizeResults(detections, displaySize)\n\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\tfaceapi.draw.drawDetections(canvas, resizedDetections)\n\t\t\t\tfaceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n\t\t\t\tif (resizedDetections.detection.score.toFixed(2) > 0.7) {\n\t\t\t\t\tawait clearInterval(recog)\n\t\t\t\t\tcanvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n\t\t\t\t\tdocument.querySelector('#alert').style.color = 'green';\n\t\t\t\t\tdocument.querySelector('#alert').innerHTML = 'Face found'\n\t\t\t\t\tWebcam.snap(function (data_uri) {\n\t\t\t\t\t\tsnappedFace = data_uri\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\tawait scanImg()\n                    \n\t\t\t\t} else {\n\t\t\t\t\tdocument.querySelector('#alert').style.color= 'red';\n\t\t\t\t\tdocument.querySelector('#alert').innerHTML = 'Can\\'t find a Face, Please Adjust'\n\t\t\t\n\t\t\t\t}\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log('something went wrong ====', err )\n\t\t\t}\n\t\t}, 1000)\n\t});   \n}"]},"metadata":{},"sourceType":"module"}